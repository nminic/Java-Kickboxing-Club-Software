/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.clan;

import domen.Clan;
import domen.Prisustvo;
import domen.Trener;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import model.TableModelPrisustvo;
import sesija.Sesija;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Natasa
 */
public class FrmPrikazClanovaSaPrisustvom extends javax.swing.JDialog {

     private Trener ulogovanTrener = Sesija.getInstance().getTrener();
    
    /**
     * Creates new form FrmPrikazClanovaSaPrisustvom
     */
    public FrmPrikazClanovaSaPrisustvom(java.awt.Frame parent, boolean modal) throws IOException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        
        popuniComboClanovi();
        popuniTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrikaz = new javax.swing.JPanel();
        jLabelClan = new javax.swing.JLabel();
        jComboBoxClan = new javax.swing.JComboBox<>();
        jPanelPrisustva = new javax.swing.JPanel();
        jScrollPanePrisustva = new javax.swing.JScrollPane();
        jTablePrisustva = new javax.swing.JTable();
        jButtonObrisi = new javax.swing.JButton();
        jLabelStatusClana = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jLabelObjasnjenje = new javax.swing.JLabel();
        jButtonNazad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prikaz članova sa prisustvom");

        jPanelPrikaz.setBorder(javax.swing.BorderFactory.createTitledBorder("Prikaz članova"));
        jPanelPrikaz.setToolTipText("");

        jLabelClan.setText("Izaberi člana:");

        jComboBoxClan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxClan.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jComboBoxClanMouseMoved(evt);
            }
        });

        jPanelPrisustva.setBorder(javax.swing.BorderFactory.createTitledBorder("Prisustva na treninzima"));

        jTablePrisustva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPanePrisustva.setViewportView(jTablePrisustva);

        jButtonObrisi.setText("Obriši prisustvo");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPrisustvaLayout = new javax.swing.GroupLayout(jPanelPrisustva);
        jPanelPrisustva.setLayout(jPanelPrisustvaLayout);
        jPanelPrisustvaLayout.setHorizontalGroup(
            jPanelPrisustvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrisustvaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrisustvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addComponent(jScrollPanePrisustva, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelPrisustvaLayout.setVerticalGroup(
            jPanelPrisustvaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrisustvaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanePrisustva, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonObrisi)
                .addContainerGap())
        );

        jLabelStatusClana.setText("Status člana: ");

        jLabelStatus.setText("Status");

        jLabelObjasnjenje.setText("Status člana se određuje na osnovu prisustva na treninzima! Ukoliko član nema zabeležena prisustva, smatra se da je neaktivan i može se obrisati!");

        javax.swing.GroupLayout jPanelPrikazLayout = new javax.swing.GroupLayout(jPanelPrikaz);
        jPanelPrikaz.setLayout(jPanelPrikazLayout);
        jPanelPrikazLayout.setHorizontalGroup(
            jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrikazLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPrisustva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelPrikazLayout.createSequentialGroup()
                        .addComponent(jLabelClan)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxClan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrikazLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelObjasnjenje, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrikazLayout.createSequentialGroup()
                                .addComponent(jLabelStatusClana)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelStatus)))))
                .addContainerGap())
        );
        jPanelPrikazLayout.setVerticalGroup(
            jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrikazLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClan)
                    .addComponent(jComboBoxClan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelPrisustva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanelPrikazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStatusClana)
                    .addComponent(jLabelStatus))
                .addGap(18, 18, 18)
                .addComponent(jLabelObjasnjenje)
                .addContainerGap())
        );

        jButtonNazad.setText("Nazad");
        jButtonNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNazadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPrikaz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNazad)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPrikaz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonNazad)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNazadActionPerformed
       this.dispose();
    }//GEN-LAST:event_jButtonNazadActionPerformed

    private void jComboBoxClanMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxClanMouseMoved
         try {
             popuniTabelu();
         } catch (IOException ex) {
             Logger.getLogger(FrmPrikazClanovaSaPrisustvom.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jComboBoxClanMouseMoved

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
         int red = jTablePrisustva.getSelectedRow();

        if (red != -1) {

            TableModelPrisustvo tmc = (TableModelPrisustvo) jTablePrisustva.getModel();

            Prisustvo prisustvo = tmc.uzmiPrisustvo(red);

            if (ulogovanTrener.getTrenerID().equals(prisustvo.getTrening().getTrener().getTrenerID())) {

                Long prisusustvoID = (Long) jTablePrisustva.getValueAt(red, 0);
                
                tmc.obrisiPrisustvo(red);

                Prisustvo obrisano= new Prisustvo();
                obrisano.setPrisustvoID(prisusustvoID);
                
                ServerskiOdgovor so = Kontroler.getInstance().obrisiPrisustvo(obrisano);
                so.getPoruka();

                if (so.isUspesnost()) {
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao izabrano prisustvo!!");
                } else {
                    JOptionPane.showMessageDialog(this, "Sistem nije obrisao izabrano prisustvo!!");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Trener može obrisati samo prisustva svojih članova!!");
                return;
            }

        } else {
            JOptionPane.showMessageDialog(this, "Odaberite prisustvo koje želite da obrišete!!");
            return;
        }
    }//GEN-LAST:event_jButtonObrisiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNazad;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JComboBox<Object> jComboBoxClan;
    private javax.swing.JLabel jLabelClan;
    private javax.swing.JLabel jLabelObjasnjenje;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelStatusClana;
    private javax.swing.JPanel jPanelPrikaz;
    private javax.swing.JPanel jPanelPrisustva;
    private javax.swing.JScrollPane jScrollPanePrisustva;
    private javax.swing.JTable jTablePrisustva;
    // End of variables declaration//GEN-END:variables

    private void popuniComboClanovi() {
         jComboBoxClan.removeAllItems(); //uklanjanje default vrednosti

        ServerskiOdgovor so = Kontroler.getInstance().vratiListuClanova();
        ArrayList<Clan> listaClanova = (ArrayList<Clan>) so.getOdgovor();

        for (Clan clan : listaClanova) {

            if (clan.getGrupa().getTrener().getTrenerID().equals(ulogovanTrener.getTrenerID())) {
                jComboBoxClan.addItem(clan);
            }

        }
    }

    private void popuniTabelu() throws FileNotFoundException, IOException {
        
        Clan clan = (Clan) jComboBoxClan.getSelectedItem();
        ServerskiOdgovor so = Kontroler.getInstance().pretraziPrisustva();
        ArrayList<Prisustvo> listaPrisustva = (ArrayList<Prisustvo>) so.getOdgovor();
        ArrayList<Prisustvo> prikaz = new ArrayList<>();

        for (Prisustvo prisustvo : listaPrisustva) {

            if (ulogovanTrener.getTrenerID().equals(prisustvo.getTrening().getTrener().getTrenerID())) {
                if(clan.getClanID().equals(prisustvo.getClan().getClanID())){
                prikaz.add(prisustvo);
                }
            }
        }

        TableModelPrisustvo tmp = new TableModelPrisustvo(prikaz);
        jTablePrisustva.setModel(tmp);
        
        Properties prop = new Properties();
        FileReader reader = new FileReader("src/property/datoteka.properties");
        prop.load(reader);
        
        String statusA = prop.getProperty("STATUS_AKTIVAN");
        String statusN = prop.getProperty("STATUS_NEAKTIVAN");
        
        if(prikaz.isEmpty()){
            jLabelStatus.setText(statusN);
        }else{
            jLabelStatus.setText(statusA);
        }
    }
}
