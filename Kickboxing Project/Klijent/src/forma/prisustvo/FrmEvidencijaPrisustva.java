/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forma.prisustvo;

import domen.Clan;
import domen.Grupa;
import domen.Prisustvo;
import domen.Trener;
import domen.Trening;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import model.TableModelClanEvidencija;
import model.TableModelTreningEvidencija;
import sesija.Sesija;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Natasa
 */
public class FrmEvidencijaPrisustva extends javax.swing.JDialog {

    private Trener ulogovanTrener = Sesija.getInstance().getTrener();

    public void setUlogovanTrener(Trener ulogovanTrener) {
        this.ulogovanTrener = ulogovanTrener;
    }

    public Trener getUlogovanTrener() {
        return ulogovanTrener;
    }

    /**
     * Creates new form FrmEvidencijaPrisustva
     */
    public FrmEvidencijaPrisustva(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        
        popuniComboBoxGrupa();

        srediTabele();

        //popuniComboBoxClan();
        //popuniComboBoxTrening();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelEvidencija = new javax.swing.JPanel();
        jComboBoxGrupa = new javax.swing.JComboBox<>();
        jLabelGrupa = new javax.swing.JLabel();
        jLabelDaLi = new javax.swing.JLabel();
        jRadioButtonDa = new javax.swing.JRadioButton();
        jRadioButtonNe = new javax.swing.JRadioButton();
        jLabelRazlog = new javax.swing.JLabel();
        jScrollPaneRazlog = new javax.swing.JScrollPane();
        jTextAreaRazlog = new javax.swing.JTextArea();
        jButtonEvidencija = new javax.swing.JButton();
        jPanelIzaberiClana = new javax.swing.JPanel();
        jScrollPaneClan = new javax.swing.JScrollPane();
        jTableClan = new javax.swing.JTable();
        jPanelIzaberiTrening = new javax.swing.JPanel();
        jScrollPaneTrening = new javax.swing.JScrollPane();
        jTableTrening = new javax.swing.JTable();
        jButtonPretrazi = new javax.swing.JButton();
        jButtonPodaci = new javax.swing.JButton();
        jLabelOpisOpciono = new javax.swing.JLabel();
        jButtonNazad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Evidentiranje prisustva");

        jPanelEvidencija.setBorder(javax.swing.BorderFactory.createTitledBorder("Evidentiranje prisustva"));

        jComboBoxGrupa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelGrupa.setText("Izaberi grupu: ");

        jLabelDaLi.setText("Da li je 훾lan bio na treningu?");

        jRadioButtonDa.setText("Da");
        jRadioButtonDa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonDaActionPerformed(evt);
            }
        });

        jRadioButtonNe.setText("Ne");
        jRadioButtonNe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNeActionPerformed(evt);
            }
        });

        jLabelRazlog.setText("Razlog izostanka:");

        jTextAreaRazlog.setColumns(20);
        jTextAreaRazlog.setRows(5);
        jScrollPaneRazlog.setViewportView(jTextAreaRazlog);

        jButtonEvidencija.setText("Evidentiraj prisustvo");
        jButtonEvidencija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEvidencijaActionPerformed(evt);
            }
        });

        jPanelIzaberiClana.setBorder(javax.swing.BorderFactory.createTitledBorder("Izaberi 훾lana"));
        jPanelIzaberiClana.setToolTipText("");

        jTableClan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneClan.setViewportView(jTableClan);

        javax.swing.GroupLayout jPanelIzaberiClanaLayout = new javax.swing.GroupLayout(jPanelIzaberiClana);
        jPanelIzaberiClana.setLayout(jPanelIzaberiClanaLayout);
        jPanelIzaberiClanaLayout.setHorizontalGroup(
            jPanelIzaberiClanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIzaberiClanaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneClan, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelIzaberiClanaLayout.setVerticalGroup(
            jPanelIzaberiClanaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIzaberiClanaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneClan, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelIzaberiTrening.setBorder(javax.swing.BorderFactory.createTitledBorder("Izaberi trening"));

        jTableTrening.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneTrening.setViewportView(jTableTrening);

        javax.swing.GroupLayout jPanelIzaberiTreningLayout = new javax.swing.GroupLayout(jPanelIzaberiTrening);
        jPanelIzaberiTrening.setLayout(jPanelIzaberiTreningLayout);
        jPanelIzaberiTreningLayout.setHorizontalGroup(
            jPanelIzaberiTreningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIzaberiTreningLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelIzaberiTreningLayout.setVerticalGroup(
            jPanelIzaberiTreningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIzaberiTreningLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTrening, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonPretrazi.setText("Pretra탑i");
        jButtonPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPretraziActionPerformed(evt);
            }
        });

        jButtonPodaci.setText("Svi podaci o 훾lanovima i treninzima");
        jButtonPodaci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPodaciActionPerformed(evt);
            }
        });

        jLabelOpisOpciono.setText("(opciono)");

        javax.swing.GroupLayout jPanelEvidencijaLayout = new javax.swing.GroupLayout(jPanelEvidencija);
        jPanelEvidencija.setLayout(jPanelEvidencijaLayout);
        jPanelEvidencijaLayout.setHorizontalGroup(
            jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEvidencija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                        .addComponent(jLabelGrupa)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxGrupa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                        .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRazlog)
                            .addComponent(jLabelOpisOpciono))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPaneRazlog))
                    .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                        .addComponent(jLabelDaLi, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonDa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonNe)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                        .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonPretrazi, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                            .addComponent(jPanelIzaberiClana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonPodaci, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addComponent(jPanelIzaberiTrening, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelEvidencijaLayout.setVerticalGroup(
            jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGrupa)
                    .addComponent(jComboBoxGrupa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPretrazi)
                    .addComponent(jButtonPodaci))
                .addGap(18, 18, 18)
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelIzaberiClana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelIzaberiTrening, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonDa)
                    .addComponent(jRadioButtonNe)
                    .addComponent(jLabelDaLi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanelEvidencijaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneRazlog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelEvidencijaLayout.createSequentialGroup()
                        .addComponent(jLabelRazlog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelOpisOpciono)))
                .addGap(47, 47, 47)
                .addComponent(jButtonEvidencija)
                .addContainerGap())
        );

        jButtonNazad.setText("Nazad");
        jButtonNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNazadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelEvidencija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNazad)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEvidencija, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonNazad)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNazadActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonNazadActionPerformed

    private void jButtonEvidencijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEvidencijaActionPerformed

        int redClan = jTableClan.getSelectedRow();
        TableModelClanEvidencija tmce = (TableModelClanEvidencija) jTableClan.getModel();

        Clan clan;
        Trening trening;

        if (redClan != -1) {
            clan = tmce.uzmiClana(redClan);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izaabrati 훾lana!!");
            return;
        }

        int redTrening = jTableTrening.getSelectedRow();
        TableModelTreningEvidencija tmte = (TableModelTreningEvidencija) jTableTrening.getModel();

        if (redTrening != -1) {
            trening = tmte.uzmiTrening(redTrening);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati trening!!");
            return;
        }

        boolean daLi = false;

        if (jRadioButtonDa.isSelected()) {
            daLi = true;
        }

        if (jRadioButtonNe.isSelected()) {
            daLi = false;
        }

        if (!jRadioButtonDa.isSelected() && !jRadioButtonNe.isSelected()) {
            JOptionPane.showMessageDialog(this, "Morate selektovati da li je clan bio na treningu!", "Greska u evidenciji", JOptionPane.ERROR_MESSAGE);
        }

        String napomena = jTextAreaRazlog.getText();

        if (clan.getGrupa().getGrupaID().equals(trening.getGrupa().getGrupaID())) {
            Prisustvo prisustvo = new Prisustvo(-1L, trening, daLi, napomena, clan);
            ServerskiOdgovor so = Kontroler.getInstance().zapamtiPrisustvo(prisustvo);

            boolean uspesnost = so.isUspesnost();

            if (uspesnost) {
                JOptionPane.showMessageDialog(this, "Sistem je uspe큄no sa훾uvao novo prisustvo!!");
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je neuspe큄no sa훾uvao novo prisustvo!!");
            }
        } else{
             JOptionPane.showMessageDialog(this, "훻lan i trening moraju biti iz iste grupe!!");
             return;
        }
        


    }//GEN-LAST:event_jButtonEvidencijaActionPerformed

    private void jRadioButtonDaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonDaActionPerformed
        if (jRadioButtonDa.isSelected()) {
            jRadioButtonNe.setSelected(false);
            jTextAreaRazlog.setEditable(false);
        }
    }//GEN-LAST:event_jRadioButtonDaActionPerformed

    private void jRadioButtonNeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNeActionPerformed
        if (jRadioButtonNe.isSelected()) {
            jRadioButtonDa.setSelected(false);
            jTextAreaRazlog.setEditable(true);
        }
    }//GEN-LAST:event_jRadioButtonNeActionPerformed

    private void jButtonPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPretraziActionPerformed
        pretrazi();
    }//GEN-LAST:event_jButtonPretraziActionPerformed

    private void jButtonPodaciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPodaciActionPerformed
        srediTabele();
    }//GEN-LAST:event_jButtonPodaciActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEvidencija;
    private javax.swing.JButton jButtonNazad;
    private javax.swing.JButton jButtonPodaci;
    private javax.swing.JButton jButtonPretrazi;
    private javax.swing.JComboBox<Object> jComboBoxGrupa;
    private javax.swing.JLabel jLabelDaLi;
    private javax.swing.JLabel jLabelGrupa;
    private javax.swing.JLabel jLabelOpisOpciono;
    private javax.swing.JLabel jLabelRazlog;
    private javax.swing.JPanel jPanelEvidencija;
    private javax.swing.JPanel jPanelIzaberiClana;
    private javax.swing.JPanel jPanelIzaberiTrening;
    private javax.swing.JRadioButton jRadioButtonDa;
    private javax.swing.JRadioButton jRadioButtonNe;
    private javax.swing.JScrollPane jScrollPaneClan;
    private javax.swing.JScrollPane jScrollPaneRazlog;
    private javax.swing.JScrollPane jScrollPaneTrening;
    private javax.swing.JTable jTableClan;
    private javax.swing.JTable jTableTrening;
    private javax.swing.JTextArea jTextAreaRazlog;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxGrupa() {
        jComboBoxGrupa.removeAllItems(); //uklanjanje default vrednosti

        ServerskiOdgovor so = Kontroler.getInstance().vratiListuGrupa();
        ArrayList<Grupa> listaGrupa = (ArrayList<Grupa>) so.getOdgovor();

        for (Grupa g : listaGrupa) {

            if (g.getTrener().getTrenerID().equals(ulogovanTrener.getTrenerID())) {
                jComboBoxGrupa.addItem(g);
            }
        }
    }

    private void srediTabele() {

        ServerskiOdgovor so1 = Kontroler.getInstance().vratiListuClanova();

        ArrayList<Clan> listaClanova = (ArrayList<Clan>) so1.getOdgovor();
        ArrayList<Clan> prikazC = new ArrayList<>();

        for (Clan clan : listaClanova) {
            if (ulogovanTrener.getTrenerID().equals(clan.getGrupa().getTrener().getTrenerID())) {
                prikazC.add(clan);
            }
        }

        TableModelClanEvidencija tmce = new TableModelClanEvidencija(prikazC);
        jTableClan.setModel(tmce);

        ServerskiOdgovor so2 = Kontroler.getInstance().vratiListuTreninga();

        ArrayList<Trening> listaTreninga = (ArrayList<Trening>) so2.getOdgovor();
        ArrayList<Trening> prikazT = new ArrayList<>();

        for (Trening trening : listaTreninga) {
            if (ulogovanTrener.getTrenerID().equals(trening.getTrener().getTrenerID())) {
                prikazT.add(trening);
            }
        }

        TableModelTreningEvidencija tmte = new TableModelTreningEvidencija(prikazT);
        jTableTrening.setModel(tmte);

    }

    private void pretrazi() {
        Grupa grupa = (Grupa) jComboBoxGrupa.getSelectedItem();
        
         if(grupa == null){
            JOptionPane.showMessageDialog(this, "Trener ne trenira nijednu grupu!! Napravi novu grupu!!");
            return;
        }

        ServerskiOdgovor so1 = Kontroler.getInstance().pretraziClanove();

        ArrayList<Clan> listaClanova = (ArrayList<Clan>) so1.getOdgovor();
        ArrayList<Clan> prikazC = new ArrayList<>();

        for (Clan clan : listaClanova) {

            if (ulogovanTrener.getTrenerID().equals(clan.getGrupa().getTrener().getTrenerID())) {
                if (grupa.getGrupaID().equals(clan.getGrupa().getGrupaID())) {
                    prikazC.add(clan);
                }
            }

        }

        TableModelClanEvidencija tmce = (TableModelClanEvidencija) jTableClan.getModel();
        tmce.setListaClanova(prikazC);

        ServerskiOdgovor so2 = Kontroler.getInstance().pretraziTreninge();

        ArrayList<Trening> listaTreninga = (ArrayList<Trening>) so2.getOdgovor();
        ArrayList<Trening> prikazT = new ArrayList<>();

        for (Trening trening : listaTreninga) {
            if (ulogovanTrener.getTrenerID().equals(trening.getTrener().getTrenerID())) {
                if (grupa.getGrupaID().equals(trening.getGrupa().getGrupaID())) {
                    prikazT.add(trening);
                }
            }

        }

        TableModelTreningEvidencija tmte = (TableModelTreningEvidencija) jTableTrening.getModel();
        tmte.setListaTreninga(prikazT);

    }

    /*
    private void popuniComboBoxClan() {
        jComboBoxClan.removeAllItems(); //uklanjanje default vrednosti

        ServerskiOdgovor so = Kontroler.getInstance().vratiListuClanova();
        ArrayList<Clan> listaClanova = (ArrayList<Clan>) so.getOdgovor();

        FrmEvidencijaPrisustva frmEvidencija = (FrmEvidencijaPrisustva) getParent();

        for (Clan clan : listaClanova) {
            jComboBoxClan.addItem(clan);
        }

    }
    
    private void popuniComboBoxTrening() {
        jComboBoxDatum.removeAllItems(); //uklanjanje default vrednosti

        ServerskiOdgovor so = Kontroler.getInstance().vratiListuTreninga();
        ArrayList<Trening> listaTreninga = (ArrayList<Trening>) so.getOdgovor();

        for (Trening trening : listaTreninga) {
            jComboBoxDatum.addItem(trening);
        }

    }
     */
}
